@import 'common.less';

.theme-oo-ui-element() {}

.theme-oo-ui-buttonElement() {
	> .oo-ui-buttonElement-button {
		position: relative;
		min-height: @min-height-widget-base;
		border-radius: @border-radius-base;
		// Use `padding` to ensure user preference text sizing scales icons.
		padding-top: @padding-top-icon-indicator;
		font-weight: bold;
		text-decoration: none;
	}

	// ButtonInputWidget's `<input>`
	> input.oo-ui-buttonElement-button {
		-webkit-appearance: none; // Support: iOS Safari
	}

	&.oo-ui-labelElement {
		> .oo-ui-buttonElement-button {
			line-height: @line-height-reset;
		}

		> input.oo-ui-buttonElement-button,
		> .oo-ui-buttonElement-button > .oo-ui-labelElement-label {
			line-height: @line-height-base;
		}

		&.oo-ui-indicatorElement {
			> .oo-ui-buttonElement-button {
				padding-right: @padding-start-indicator-plus;
			}
		}
	}

	&.oo-ui-iconElement .oo-ui-iconElement-icon,
	&.oo-ui-indicatorElement .oo-ui-indicatorElement-indicator {
		.oo-ui-force-gpu-composite-layer();
	}

	&.oo-ui-indicatorElement {
		// Indicator and label/icon
		&.oo-ui-labelElement,
		&.oo-ui-iconElement {
			> .oo-ui-buttonElement-button > .oo-ui-indicatorElement-indicator {
				right: @padding-start-indicator;
			}
		}
	}

	&.oo-ui-widget-enabled {
		> .oo-ui-buttonElement-button {
			transition-property: background-color, color, border-color, box-shadow;
			transition-duration: @transition-duration-base;

			> .oo-ui-iconElement-icon,
			> .oo-ui-indicatorElement-indicator {
				transition-property: opacity;
				transition-duration: @transition-duration-base;

				// Framed `:hover` styles are at `$-framed` below.
				&:not( .oo-ui-image-invert ) {
					opacity: @opacity-icon-base;
				}
			}

			&:focus {
				// In Windows high contrast mode the transparent outline becomes visible.
				outline: @outline-base--focus;
			}
		}

		&.oo-ui-buttonElement-pressed {
			> .oo-ui-buttonElement-button {
				> .oo-ui-iconElement-icon,
				> .oo-ui-indicatorElement-indicator {
					opacity: @opacity-icon-base--selected;
				}
			}
		}
	}

	&-frameless {
		// Icon (-only) frameless
		&.oo-ui-iconElement {
			&:first-child {
				margin-left: @start-frameless; // Address `left` on `.oo-ui-iconElement-icon` below with negative value
			}

			> .oo-ui-buttonElement-button {
				min-width: @min-size-base;
				min-height: @min-size-base;
				border-color: @border-color-frameless;
				border-style: @border-style-base;
				border-width: @border-width-base;
				padding-top: @padding-top-icon-indicator;
				padding-left: @padding-start-icon-only;

				> .oo-ui-iconElement-icon {
					left: @start-frameless-icon;
				}
			}
		}

		&.oo-ui-labelElement {
			&:first-child {
				margin-left: -@padding-horizontal-frameless; // Address `padding-left/-right` below
			}

			&.oo-ui-iconElement {
				&:first-child {
					margin-left: @start-frameless;
				}
			}

			> .oo-ui-buttonElement-button {
				border-color: @border-color-frameless;
				border-style: @border-style-base;
				border-width: @border-width-base;
				padding: @padding-frameless;
			}

			&.oo-ui-iconElement > .oo-ui-buttonElement-button {
				padding-left: @padding-start-frameless-icon-plus;
			}
		}

		&.oo-ui-indicatorElement {
			&:not( .oo-ui-iconElement ):not( .oo-ui-labelElement ) > .oo-ui-buttonElement-button {
				min-width: @min-size-indicator;
			}

			&.oo-ui-iconElement > .oo-ui-buttonElement-button { // Reset with specificity from above, see T174968
				padding-left: @padding-start-frameless-icon-plus + @padding-start-indicator-only;
			}

			&.oo-ui-labelElement > .oo-ui-buttonElement-button { // Reset with specificity from above, see T174167
				padding-left: @padding-horizontal-frameless;
				padding-top: @padding-vertical-base;
			}

			&.oo-ui-iconElement.oo-ui-labelElement > .oo-ui-buttonElement-button {
				padding-left: @padding-start-icon-only;
			}
		}

		&.oo-ui-widget-enabled {
			> .oo-ui-buttonElement-button {
				color: @color-base;

				&:hover {
					background-color: @background-color-frameless--hover;
					color: @color-base--active;
				}

				&:focus {
					border-color: @border-color-base--focus;
					box-shadow: @box-shadow-base--focus;
				}
			}

			&.oo-ui-buttonElement-pressed > input.oo-ui-buttonElement-button,
			> .oo-ui-buttonElement-button:active {
				background-color: @background-color-frameless--active;
				color: @color-base--active;
				border-color: @border-color-base--active;
				box-shadow: none;
			}

			&.oo-ui-indicatorElement:not( .oo-ui-iconElement ):not( .oo-ui-labelElement ) {
				> .oo-ui-buttonElement-button {
					border-radius: @border-radius-frameless-indicator;

					&:focus {
						box-shadow: @box-shadow-frameless-indicator--focus;
					}

					&:active {
						box-shadow: none;
					}
				}
			}

			&.oo-ui-flaggedElement {
				&-progressive {
					.mw-frameless-button-colored( ~'.oo-ui-buttonElement-button', @color-primary, @color-primary--hover, @color-primary--active, @color-primary--focus );
				}

				&-destructive {
					.mw-frameless-button-colored( ~'.oo-ui-buttonElement-button', @color-destructive, @color-destructive--hover, @color-destructive--active, @color-destructive--focus );
				}
			}

			&[ class*='oo-ui-flaggedElement' ] {
				> .oo-ui-buttonElement-button {
					> .oo-ui-iconElement-icon,
					> .oo-ui-indicatorElement-indicator {
						opacity: @opacity-icon-base--selected;
					}
				}
			}
		}

		&.oo-ui-widget-disabled {
			> .oo-ui-buttonElement-button {
				color: @color-base--disabled;

				> .oo-ui-iconElement-icon,
				> .oo-ui-indicatorElement-indicator {
					opacity: @opacity-base--disabled;
				}
			}
		}
	}

	&-framed {
		> .oo-ui-buttonElement-button {
			border-style: @border-style-base;
			border-width: @border-width-base;
			border-radius: @border-radius-base;
			padding-left: @padding-horizontal-base;
			padding-right: @padding-horizontal-base;
		}

		&.oo-ui-iconElement {
			// Icon (-only) framed
			> .oo-ui-buttonElement-button {
				padding-top: @padding-top-icon-indicator;
				padding-bottom: 0;
				padding-left: @padding-start-icon-only;

				> .oo-ui-iconElement-icon {
					// Providing value flexible centering for icon only in mobile context.
					left: 50%;
					margin-left: -( @size-icon / 2 );
				}
			}

			// Icon and label/indicator framed
			&.oo-ui-labelElement,
			&.oo-ui-indicatorElement {
				> .oo-ui-buttonElement-button {
					padding-left: @padding-start-button-framed-icon-label;

					> .oo-ui-iconElement-icon {
						left: @start-framed-icon-only;
						margin-left: 0;
					}
				}
			}
		}

		&.oo-ui-indicatorElement {
			// Indicator (-only) framed
			> .oo-ui-buttonElement-button {
				padding-top: @padding-top-icon-indicator;
				padding-right: @padding-start-indicator-only;
				padding-bottom: 0;
			}
		}

		&.oo-ui-labelElement {
			> .oo-ui-buttonElement-button {
				padding-top: @padding-vertical-base;
				padding-bottom: @padding-vertical-base;
			}
		}

		&.oo-ui-widget-disabled {
			> .oo-ui-buttonElement-button {
				background-color: @background-color-filled--disabled;
				color: @color-filled--disabled;
				border-color: @border-color-base--disabled;
			}

			&.oo-ui-buttonElement-active > .oo-ui-buttonElement-button {
				background-color: mix( @color-primary--active, @background-color-filled--disabled, 35% );
			}
		}

		&.oo-ui-widget-enabled {
			> .oo-ui-buttonElement-button {
				background-color: @background-color-framed;
				color: @color-base;
				border-color: @border-color-base;

				&:hover {
					background-color: @background-color-framed--hover;
					color: @color-base--hover;
					border-color: @border-color-base--hover;

					> .oo-ui-iconElement-icon,
					> .oo-ui-indicatorElement-indicator {
						&:not( .oo-ui-image-invert ) {
							opacity: @opacity-icon-base--hover;
						}
					}
				}

				&:focus {
					border-color: @border-color-base--focus;
					box-shadow: @box-shadow-base--focus;
				}
			}

			// `.oo-ui-buttonElement-active` is the selected (toggled) one here.
			&.oo-ui-buttonElement-active > .oo-ui-buttonElement-button {
				background-color: @color-primary--active;
				color: @color-base--inverted;
				border-color: @border-color-input-binary--active;

				&:focus {
					border-color: @color-primary--focus;
					box-shadow: @box-shadow-progressive-filled--focus;
				}
			}

			// `.oo-ui-buttonElement-pressed` is the `:active` (mousedown) one here.
			> .oo-ui-buttonElement-button:active,
			&.oo-ui-buttonElement-pressed > .oo-ui-buttonElement-button {
				background-color: @background-color-framed--active;
				color: @color-base--active;
				border-color: @border-color-base--active;
				box-shadow: none;
			}

			&.oo-ui-flaggedElement {
				&-progressive {
					.mw-framed-button-colored( ~'.oo-ui-buttonElement-button', @color-primary, @background-color-framed--hover, @border-color-framed-progressive--hover, @color-primary--active, @color-primary--focus );
				}

				&-destructive {
					.mw-framed-button-colored( ~'.oo-ui-buttonElement-button', @color-destructive-non-primary, @background-color-framed--hover, @border-color-framed-destructive--hover, @color-destructive--active, @color-destructive--focus );
				}
			}

			&.oo-ui-flaggedElement-primary {
				&.oo-ui-flaggedElement {
					&-progressive {
						.mw-framed-primary-button-colored( ~'.oo-ui-buttonElement-button', @color-primary, @color-primary--hover, @color-primary--active, @color-primary--focus );
					}

					&-destructive {
						.mw-framed-primary-button-colored( ~'.oo-ui-buttonElement-button', @color-destructive, @color-destructive--hover, @color-destructive--active, @color-destructive--focus );
					}
				}

				> .oo-ui-buttonElement-button {
					> .oo-ui-iconElement-icon,
					> .oo-ui-indicatorElement-indicator {
						opacity: @opacity-icon-base--selected;
					}
				}
			}
		}
	}
}

.theme-oo-ui-clippableElement() {}

.theme-oo-ui-draggableElement() {}

.theme-oo-ui-draggableGroupElement() {}

.theme-oo-ui-flaggedElement() {}

.theme-oo-ui-floatableElement() {}

.theme-oo-ui-groupElement() {}

.theme-oo-ui-iconElement() {
	// Support inverted high contrast mode in Windows (T180890)
	@media ( forced-colors: active ) and ( prefers-color-scheme: dark ) {
		&-icon:not( .oo-ui-image-invert ) {
			filter: invert( 1 ) hue-rotate( 180deg );
		}
	}
}

.theme-oo-ui-indicatorElement() {
	// Support inverted high contrast mode in Windows (T180890)
	@media ( forced-colors: active ) and ( prefers-color-scheme: dark ) {
		&-indicator:not( .oo-ui-image-invert ) {
			filter: invert( 1 ) hue-rotate( 180deg );
		}
	}
}

.theme-oo-ui-labelElement() {
	.oo-ui-labelElement-label {
		line-height: @line-height-base;
	}

	.oo-ui-labelElement-label-highlight {
		font-weight: bold;
	}
}

.theme-oo-ui-lookupElement() {}

.theme-oo-ui-pendingElement() {
	&-pending {
		background-color: @background-color-pending-stripe;
		background-image: linear-gradient( 135deg, @background-color-base 25%, transparent 25%, transparent 50%, @background-color-base 50%, @background-color-base 75%, transparent 75%, transparent );
		background-size: @size-icon @size-icon;
		animation: oo-ui-pendingElement-stripes 650ms linear infinite;

		@keyframes oo-ui-pendingElement-stripes {
			0% {
				background-position: -@size-icon 0;
			}

			100% {
				background-position: 0 0;
			}
		}
	}
}

.theme-oo-ui-popupElement() {}

.theme-oo-ui-tabIndexedElement() {}

.theme-oo-ui-titledElement() {}
